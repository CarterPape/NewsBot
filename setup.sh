#!/bin/bash

# # # # # # # # # # # # # # # # # # # #
# NewsBot, a journalism tool
# Copyright 2020 Carter Pape
# 
# See file LICENSE for licensing terms.
# # # # # # # # # # # # # # # # # # # #

sudo -v
project_path="$( cd "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )"

########### PREREQUISITES INSTALLATIONS ################

printf "installing missing python requirements\n"
pip install -r "$project_path/requirements.txt" -q

printf "installing libmagic and mysql if missing\n"
if command -v apt-get &>/dev/null; then
    sudo apt update -y
    sudo apt-get install -y libmagic-dev
    sudo apt-get install -y mysql-server
elif command -v brew &>/dev/null; then
    brew list libmagic &>/dev/null || brew install libmagic
    brew list mysql &>/dev/null || brew install mysql
else 
    printf "This project requires libmagic and MySQL. "
    printf "Install them or ensure they are already installed, then hit [Enter] to continue. "
    read
fi

printf "\n"

############ DATABASE SETUP ##############

printf "creating newsbot database if missing\n"
sudo mysql -u root -e "CREATE DATABASE IF NOT EXISTS newsbot;"

newsbot_users=$(sudo mysql -u root -s -r -e \
    "
        SELECT count(*)
            FROM mysql.user
            WHERE user = 'newsbot';
    "
)
if [[ $newsbot_users == 0 ]]; then
    if [[ -e "$project_path/.env" ]]; then
        printf "No MySQL user 'newsbot'@'localhost' detected. Moving .env to .env.old\n"
        mv .env .env.old &>/dev/null
    fi
    printf "Come up with a clever password for 'newsbot'@'localhost' (the MySQL user for NewsBot) "
    stty -echo
    read mysql_password
    stty echo
    printf "\n"
    
    sudo mysql -u root -e "CREATE USER 'newsbot'@'localhost' IDENTIFIED BY '$mysql_password';"
else
    printf "MySQL user 'newsbot'@'localhost' already exists.\n"
fi

mysql_result=$(sudo mysql -u root -e "show grants for 'newsbot'@'localhost'") 2>/dev/null

if [[ $mysql_result != *"GRANT ALL PRIVILEGES ON \`newsbot\`.* TO 'newsbot'@'localhost'"* ]]; then
    printf "granting 'newsbot'@'localhost' user appropriate permissions\n"
    sudo mysql -u root -e "GRANT ALL PRIVILEGES ON newsbot.* TO 'newsbot'@'localhost';"
fi

printf "Do you want to secure the 'root'@'localhost' MySQL user?\n"
printf "You might have already done this. It is fine to do it again.\n"

select answer in "Yes" "No"; do
    case $answer in
        Yes ) sudo mysql_secure_installation; break;;
        No )  break;;
    esac
done

printf "\n"

################## .ENV FILE SETUP ########################

if [[ -e "$project_path/.env" ]]; then
    printf "$project_path/.env already exists. \nEdit it directly to make changes, "
    printf "or delete it and run this script again to recreate it from scratch.\n"
else
    rm "$project_path/.env" 2>/dev/null

    printf "ENVIRONMENT = (probably: production) "
    read -r environment

    printf "DEFAULT_EMAIL_SENDER = (something like: Your NewsBot <your-newsbot@your.newsbot.domain>) "
    read -r email_sender
    printf "EMAIL_SENDER_DOMAIN = (something like: your.newsbot.domain) "
    read -r email_sender_domain

    printf "MAILGUN_API_KEY = (check https://app.mailgun.com/app/account/security/api_keys) "
    read -r mailgun_api_key

    printf "# This document was generated by config.sh\n\n" >> "$project_path/.env"
    printf "ENVIRONMENT='$environment'\n\n" >> "$project_path/.env"
    printf "DEFAULT_EMAIL_SENDER='$email_sender'\n" >> "$project_path/.env"
    printf "EMAIL_SENDER_DOMAIN='$email_sender_domain'\n\n" >> "$project_path/.env"
    printf "MAILGUN_API_KEY='$mailgun_api_key'\n\n" >> "$project_path/.env"
    printf "MYSQL_DATABASE='newsbot'\n" >> "$project_path/.env";
    printf "MYSQL_USER='newsbot'\n" >> "$project_path/.env";
    
    if [[ -z ${mysql_password+x} ]]; then
        printf "What is the current password for MySQL user 'newsbot'@'localhost'? "
        stty -echo
        read mysql_password
        stty echo
        printf "\n"
    fi
    printf "MYSQL_PASSWORD='$mysql_password'\n" >> "$project_path/.env";

    chmod u=rw,g=,o= "$project_path/.env"

    printf "$project_path/.env written\n"
fi

printf "\n"

############# DEFAULT EMAIL RECIPIENT #####################

python "$project_path/scripts/set_up_default_email_recipient.py"

printf "\n"

############## PROJECT PLACEMENT AND LINKING ################

. ./.env
if [[ $ENVIRONMENT == "development" ]]; then
    printf "Skipping project placement, linking, and startup because development mode "
    printf "was detected.\n"
    printf "Check file .env if that seems wrong.\n"
    exit
fi

sudo rm -rf /usr/local/src/NewsBot 2>/dev/null
sudo ln -s "$project_path" /usr/local/src/NewsBot && \
    printf "Project linked in /usr/local/src/.\n"

sudo mkdir -p /usr/local/lib/systemd/system/
sudo rm -rf /usr/local/lib/systemd/system/newsbot.service 2>/dev/null
sudo ln -s "$project_path/newsbot.service" /usr/local/lib/systemd/system/ && \
    printf "Service file linked in /usr/local/lib/systemd/system/.\n"

printf "\n"

################### PROJECT STARTUP #######################

sudo systemctl enable newsbot
sudo systemctl start newsbot
